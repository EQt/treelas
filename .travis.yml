language: cpp
dist: bionic

git:
  submodules: false

notifications:
  email:
    on_failure: change
    on_success: change

branches:
  only:
    - master

env:
  global:
    - curl="https://repo.continuum.io/miniconda/Miniconda3-latest"
    - CONDA_BASE="$TRAVIS_BUILD_DIR/miniconda3"

matrix:
  include:
    - language: julia
      os: linux  # don't need it specifically for osx
      julia: 1.1
      before_install:
        - julia --color=yes -e 'import Pkg; Pkg.develop(Pkg.PackageSpec(path="graphidx/julia"))'
        - julia --color=yes -e 'import Pkg; Pkg.develop(Pkg.PackageSpec(path="julia"))'
        - julia --color=yes -e 'import Pkg; Pkg.instantiate()'
      install:
        - julia --color=yes -e 'import Pkg; Pkg.build("TreeLas")'
        - julia --color=yes --project=docs/ -e 'import Pkg; Pkg.add("Documenter")'
      script:
        - julia --color=yes -e 'import Pkg; Pkg.test("TreeLas")'
        - julia --color=yes --project=docs/ docs/make.jl

    - language: rust
      os: linux
      rust: stable
      install:
        - cargo --version
      script:
        - cd graphidx && cargo test

    - language: cpp
      os: linux
      env: url="$curl-Linux-x86_64.sh"

    - language: cpp
      os: osx
      env: url="$curl-MacOSX-x86_64.sh"

cache:
  directories:
    - "$CONDA_BASE"

before_cache:
  - pip uninstall -y treelas
  - rm -fr $CONDA_BASE/envs
  - rm -fr $CONDA_BASE/lib/python*/site-packages/treelas*

install:
# - git describe --tags
  - uname -a && echo $TRAVIS_OS_NAME && pwd
  - export CC=${C_COMPILER:-cc} && echo $CC && $CC --version
  - export CXX=${CXX_COMPILER:-c++} && echo $CXX && $CXX --version
  - echo | ${CC} -dM -E -x c -
  - if [[ ! -d $CONDA_BASE/bin ]]; then
      wget $url -O miniconda.sh;
      rm -fr $CONDA_BASE;
      bash miniconda.sh -b -p $CONDA_BASE;
    fi
  - export PATH=$CONDA_BASE/bin:$PATH;
  - conda install -y pytest networkx h5py numba
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then conda install -y cmake; fi
  - pip install pybind11
  - python -m pybind11 --include
  - python -c 'from sys import byteorder as b; print("byte-order:", b)'

script:
  - df -h ~
  - mkdir -p build && cd build
  - CXX=$CXX CC=$CC cmake .. -DCMAKE_BUILD_TYPE=Debug
  - make -j$(nproc) && ./tests
  - cd .. && rm -fr build
  - cd ./python && pwd && rm -fr build
  - CC=$CXX python setup.py install
  - pip install toml
  - py.test --color=yes ../graphidx/python/
  - py.test --color=yes test/
