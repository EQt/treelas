from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider

include: "../Snakefile"


HTTP = HTTPRemoteProvider()
WIKI = "https://upload.wikimedia.org/wikipedia/commons"
IMG_TYPES = ['orig', 'y', 'xgrid', 'x++']


rule phantom_demo:
    input: "phantom_w300_0_lam2e-1_x++.png", "phantom_w300_lam2e-1.grid_opt"


rule download_all:
    input:
        'phantom.svg'


rule download_phantom:
    output:
        'phantom.svg'
    input:
        HTTP.remote(WIKI + "/c/c7/SheppLogan_Phantom.svg", keep_local=False)
    run:
        from decss import remove_css

        remove_css(input[0], output[0])


rule render_svg:
    input:  '{name}.svg'
    output: '{name}_w{width,\d+}.img'
    run:
        from render_svg import gm_render
        import h5py
        import numpy as np

        seed = 2020
        std = 0.25
        np.random.seed(seed)
        orig = gm_render(input[0], width=int(wildcards.width))
        y = orig + np.random.normal(scale=std, size=orig.shape)
        with h5py.File(output[0], 'w') as io:
            io.create_dataset('orig', data=orig)
            io.create_dataset('y', data=y)
            io.create_dataset("lam", data=[0.1])


rule julia_grid_graph:
    input:  "{name}.img"
    output: "{name}.jlgraph"
    shell:  "julia grid.jl {input} {output}"


rule grid_graph:
    input:  "{name}.img", cmake("grid")
    output: "{name}.graph"
    shell:  "{input[1]} --img {input[0]} --out {output}"


rule solve_grid:
    input:  "{name}.img"
    output: "{name}_lam{lam}.grid_opt"
    shell:  "julia grid_opt.jl {input[0]} {wildcards.lam} {output[0]}"


rule grid_spanning_tree:
    input:  "{name}.graph", f"{CMAKE_BUILD}/traverse"
    output: "{name}_{seed,\\d+}.tree"
    shell:  "{input[1]} -s {wildcards.seed} {input[0]} {output}"


rule plot_imgs:
    input:  "{name}_{seed}_lam{lam,[^_]+}.tree_sol",
            "{name}_lam{lam,[^_]+}.grid_opt",
            "{name}.img"
    output: expand("{{name}}_{{seed}}_lam{{lam}}_{t}.png", t=IMG_TYPES)
    run:
        from show import plot_figs

        prefix=f"{wildcards.name}_lam{wildcards.lam}_"
        plot_figs(input, 'png', None,
                  prefix=f"{wildcards.name}_{wildcards.seed}_lam{wildcards.lam}_")


rule join_images:
    output: "{name}_{seed}_lam{lam,[^_]+}_pad{p}.png"
    input:  expand("{{name}}_{{seed}}_lam{{lam}}_{t}.png", t=IMG_TYPES)
    shell:  """
    convert -border {wildcards.p}x{wildcards.p} -bordercolor none {input}  +append {output}
    """
